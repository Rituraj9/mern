[{"C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\index.js":"1","C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\reportWebVitals.js":"2","C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\App.js":"3","C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\data\\api.js":"4","C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\screens\\FileUploadScreen.js":"5"},{"size":500,"mtime":1629223310476,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1629223310736,"results":"8","hashOfConfig":"7"},{"size":1518,"mtime":1629228153741,"results":"9","hashOfConfig":"7"},{"size":458,"mtime":1629227780387,"results":"10","hashOfConfig":"7"},{"size":2617,"mtime":1629226951160,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mrndcl",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\index.js",[],["24","25"],"C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\reportWebVitals.js",[],"C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\App.js",[],"C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\data\\api.js",[],"C:\\Users\\Rituraj\\Web\\nodejs\\Nodejs_Mongodb_Express_Multer-main\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\screens\\FileUploadScreen.js",["26","27","28"],"import React, {useState, useEffect} from 'react';\nimport {singleFileUpload} from '../data/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\n\nconst FileUploadScreen = (props) => {\n    const [singleFile, setSingleFile] = useState('');\n    //const [multipleFiles, setMultipleFiles] = useState('');\n    const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    //const [multipleProgress, setMultipleProgress] = useState(0);\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    const uploadSingleFile = async () => {\n        const formData = new FormData();\n        formData.append('file', singleFile);\n        await singleFileUpload(formData, singleFileOptions);\n        props.getsingle();\n    }\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"form-group\">\n                    <label>Select Single File</label>\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\n                    </div>\n                    <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={singleProgress}\n                            text={`${singleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FileUploadScreen;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":26,"nodeType":"35","messageId":"36","endLine":1,"endColumn":35},{"ruleId":"33","severity":1,"message":"37","line":10,"column":12,"nodeType":"35","messageId":"36","endLine":10,"endColumn":17},{"ruleId":"33","severity":1,"message":"38","line":10,"column":19,"nodeType":"35","messageId":"36","endLine":10,"endColumn":27},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]